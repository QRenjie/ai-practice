在是实现这个功能的时候我和ai讨论了什么是 imagica 以及 brain.ai
我告诉了ai, imagica 有两种角色,分别是创作者和分享者
然后我对ai说,我想简化从创作到分享到过程
ai会告诉我可以做一个实时的预览功能
主要功能就是:在和ai对话的时候,可以实时预览对话中的代码
我同意了ai的想法,就让ai帮我实现这个功能
并且还询问 ai,帮我给这个项目起一个名字, ai告诉我可以叫: ideaflow


我和 ai 讨论了在第二次对话后，AI 回答的代码块可能只有部分的问题。
ai 提出了几个可能的解决方案：
累积代码：使用状态来存储和累积多个回答中的代码块。
提示用户：如果代码不完整，提示用户继续询问 AI 以获取完整代码。
自动请求完整代码：检测到代码不完整时，自动向 AI 发送请求。
代码合并：尝试智能地合并多个回答中的代码片段。
显示代码完整性指示器：添加视觉指示器显示当前累积代码的完整性程度。

ai提供了一个简化的实现示例，包括：
在 Chat 组件中添加 accumulatedCode 和 codeCompleteness 状态。
修改 handleSubmit 函数以累积代码和计算完整度。
在 UI 中添加代码完整度显示和请求完整代码的按钮。
我和 ai 讨论了性能优化的问题，特别是在多次对话后应用变得卡顿的情况。

ai 提出了几个优化建议：
限制聊天历史长度。
优化 API 调用，只发送最近的几条消息。
缓存代码提取结果。
使用虚拟化列表来优化长对话的渲染性能。
对输入和提交操作添加防抖处理。
优化 CodeExtractor 类的性能。
我和 ai 还讨论了 alert() 函数在 iframe 中被禁用的问题，并提出了使用自定义函数来显示消息的解决方案。
最后，我和 ai 查看了当前代码库中的相关代码片段，包括 Chat 组件、API 路由和一些样式文件。


并且我在一点一点实现我的想法后，我发现和cursor本身很像，于是我打开一个新的chat，询问ai

我： “我想做的应用其实是像cursor你这样的，可以做到吗”
AI：我理解您想要创建一个类似Cursor这样的应用程序。这确实是一个有趣且具有挑战性的项目。虽然完全复制Cursor的所有功能可能需要大量的工作，但我们可以开始构建一些基本功能。以下是一些建议：

1. 代码编辑功能：允许用户在应用中编写和编辑代码。
2. 实时预览：提供一个实时预览功能，让用户可以看到他们的代码在浏览器中的效果。
3. 项目管理：允许用户创建、保存和管理他们的项目。
4. 代码提示和自动完成：使用AI来提供代码提示和自动完成功能。
5. 版本控制：允许用户查看和管理他们的代码历史。
6. 协作功能：允许用户与他人协作，共享代码和项目。

不过上述功能ai回答非常复杂,需要很长时间才能实现,于是我决定先实现一个简单的版本,然后再慢慢添加功能
后面迭代的版本会加上ai建议的功能

9-20
今天我继续和ai讨论了ideaflow的实现细节,我告诉ai,我想做一个类似cursor的代码编辑器,ai告诉我,可以做一个实时的预览功能,主要功能就是:在和ai对话的时候,可以实时预览对话中的代码
但是我没有任何思路, 我询问ai在现在项目的基础之上有什么方案

ai 的回答基本离不开优化和存储,比如ai建议我可以做一个存储,实现多人协作,增加更好的ui等等

但是我一致强调,我需要一个自由,简洁的应用,在我反复和他讨论的过程中,ai有个建议我采纳了

ai 告诉我说人们都习惯操作系统认为它是自由度最高的软件,而我们现在项目正好以”窗口“为单位,不如将整个功能合并成一个窗口,让用户自由操作
并且可以将每个窗口组合在一起,形成一个完整的项目, 并且还可以加上在线协作,最后还可将整个项目导出
具体步骤: 
1. 将原来的 code,chat,preview 三个窗口合并成一个窗口, 并且这个窗口可以自由移动, 缩放, 关闭
2. "窗口"可根据和ai对话的内容中的代码执行结果放入预览
3. 将窗口锁定后,可以在整个项目中拖拽, 最终形成一个完整的前端项目

不过今天完成进度仅仅是将“组合”的窗口实现,
中途遇到了一个问题, 前端因为只能处理html代码, 对于python或其他服务端语言尝试运行在前端项目运行问题较多

整个过程我并不清楚ai想要怎么做,因为我没有任何细节可以告诉他, 并且我也没有告诉他我想要怎么做, 所以整个过程都是我再提问, ai回答, 然后我否定, 再提问, ai回答, 再否定的过程....
这个过程比较耗时,甚至还试错, 比如:中途ai做一个ar/vr,结果折腾大量时间后否定了
可能主要原因是作为开发者的我来说没有将整个细节告诉ai