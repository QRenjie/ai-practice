{
  "react-base": {
    "id": "",
    "config": {
      "selectedModel": "gpt-3.5-turbo",
      "recommendedKeywords": [],
      "isChatCollapsed": false,
      "isWindowed": true,
      "coderPrompt": "locale:coderPrompt:react-base"
    },
    "ui": {
      "activeTab": "preview",
      "title": "",
      "size": {
        "width": 480,
        "height": 600
      },
      "position": {
        "x": 20,
        "y": 20
      },
      "isMaximized": false,
      "isMinimized": false,
      "maxSize": {
        "width": "100%",
        "height": "100%"
      }
    },
    "code": {
      "mergedCodeBlocks": [],
      "files": {
        "/App.js": {
          "code": "export default function App() {\r\n  return <h1>Hello Imagicav2 Preview</h1>;\r\n}\r\n",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/index.js": {
          "code": "import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './styles.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/public/index.html": {
          "code": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"utf-8\" />\r\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n    <meta name=\"theme-color\" content=\"#000000\" />\r\n    <meta\r\n      name=\"description\"\r\n      content=\"Web site created using create-react-app\"\r\n    />\r\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\r\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\r\n    <title>React App</title>\r\n  </head>\r\n  <body>\r\n    <noscript>You need to enable JavaScript to run this app.</noscript>\r\n    <div id=\"root\"></div>\r\n  </body>\r\n</html>\r\n",
          "hidden": false,
          "active": false,
          "readOnly": true
        }
      },
      "customSetup": {
        "dependencies": {
          "react": "^18.3.1",
          "react-dom": "^18.3.1",
          "react-scripts": "5.0.1"
        },
        "devDependencies": {}
      },
      "template": "react"
    },
    "chat": {
      "messages": []
    }
  },
  "vite-react": {
    "id": "",
    "config": {
      "selectedModel": "gpt-3.5-turbo",
      "recommendedKeywords": [],
      "isChatCollapsed": false,
      "isWindowed": true,
      "coderPrompt": "locale:coderPrompt:vite-react"
    },
    "ui": {
      "activeTab": "preview",
      "title": "",
      "size": {
        "width": 480,
        "height": 600
      },
      "position": {
        "x": 20,
        "y": 20
      },
      "isMaximized": false,
      "isMinimized": false,
      "maxSize": {
        "width": "100%",
        "height": "100%"
      }
    },
    "code": {
      "mergedCodeBlocks": [],
      "files": {
        "/App.jsx": {
          "code": "import React from 'react';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 flex items-center justify-center\">\r\n      <h1 className=\"text-4xl font-bold text-blue-600\">\r\n        Hello, Vite React + Tailwind CSS!\r\n      </h1>\r\n    </div>\r\n  );\r\n}",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/index.html": {
          "code": "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Vite App</title>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\"></div>\r\n    <script type=\"module\" src=\"/index.jsx\"></script>\r\n  </body>\r\n</html>",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/index.jsx": {
          "code": "import { StrictMode } from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport \"./styles.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst root = createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>\r\n);",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/postcss.config.js": {
          "code": "module.exports = {\r\n  plugins: {\r\n    tailwindcss: {},\r\n    autoprefixer: {},\r\n  },\r\n};\r\n",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/styles.css": {
          "code": "@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/tailwind.config.js": {
          "code": "/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n  content: [\"./**/*.{js,jsx,ts,tsx}\"],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n};\r\n",
          "hidden": false,
          "active": false,
          "readOnly": true
        },
        "/vite.config.js": {
          "code": "import { defineConfig } from 'vite'\r\nimport react from '@vitejs/plugin-react'\r\nimport tailwindcss from 'tailwindcss'\r\nimport autoprefixer from 'autoprefixer'\r\n\r\nexport default defineConfig({\r\n  plugins: [react()],\r\n  css: {\r\n    postcss: {\r\n      plugins: [\r\n        tailwindcss,\r\n        autoprefixer,\r\n      ],\r\n    },\r\n  },\r\n})",
          "hidden": false,
          "active": false,
          "readOnly": true
        }
      },
      "customSetup": {
        "dependencies": {
          "tailwindcss": "^3.4.3",
          "postcss": "^8.4.4",
          "autoprefixer": "^10.4.19",
          "react": "^18.2.0",
          "react-dom": "^18.2.0"
        },
        "devDependencies": {
          "@vitejs/plugin-react": "3.1.0",
          "vite": "4.1.4",
          "esbuild-wasm": "0.17.12"
        }
      },
      "template": "vite-react"
    },
    "chat": {
      "messages": []
    }
  }
}